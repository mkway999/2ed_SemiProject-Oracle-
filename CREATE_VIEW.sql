-- 관리자가 보는 과목별 담당 교수 조회
CREATE OR REPLACE VIEW VIEW_PRO_BY_SUBJECTS
AS
SELECT S.SB_CODE AS 과목코드
     , OS.OS_CODE AS 개설과목코드
     , S.SB_NAME AS 과목명
     , P.P_NAME AS 담당교수명
FROM PROFESSORS P, OPENED_SUBJECTS OS, SUBJECTS S
WHERE P.P_CODE = OS.P_CODE
  AND OS.SB_CODE = S.SB_CODE;

CREATE OR REPLACE VIEW VIEW_ALL_PROFESSORS
AS
SELECT P.P_NAME 교수명, S.SB_NAME 과목명, OS.OS_START_DATE 과목시작일, OS.OS_END_DATE 과목종료일, B.BK_NAME 교재명, CR.RM_NAME 강의실
, FN_OS_DATE(OS.OS_CODE, OS.OS_START_DATE, OS.OS_END_DATE)
FROM OPENED_SUBJECTS OS JOIN PROFESSORS P ON OS.P_CODE = P.P_CODE
                        JOIN SUBJECTS   S ON OS.SB_CODE = S.SB_CODE
                        JOIN BOOKS      B ON OS.BK_CODE = B.BK_CODE
                        JOIN OPENED_COURSES  OC ON OS.OC_CODE = OC.OC_CODE
                        JOIN CLASSROOMS CR ON OC.RM_CODE = CR.RM_CODE;
--WHERE P.P_CODE = 'P1001'; -- 프로그램에서 입력받은 교수 코드

-- 과정 정보 조회
CREATE OR REPLACE VIEW VIEW_COURSES
AS
SELECT C.CR_NAME "과정명",CLA.RM_NAME "강의실", S.SB_NAME "과목명"
 , OS.OS_START_DATE "과목 시작",OS.OS_END_DATE "과목 끝",B.BK_NAME "교재 명",P.P_NAME "교수 명"
FROM COURSES C JOIN OPENED_COURSES OC
                 ON C.CR_CODE = OC.CR_CODE
               JOIN CLASSROOMS CLA
                 ON OC.RM_CODE = CLA.RM_CODE
               JOIN OPENED_SUBJECTS OS
                 ON OS.OC_CODE = OC.OC_CODE
               JOIN SUBJECTS S
                 ON S.SB_CODE = OS.SB_CODE
                 JOIN BOOKS B
                 ON B.BK_CODE = OS.BK_CODE
                 JOIN PROFESSORS P
                 ON P.P_CODE = OS.P_CODE;

-- 관리자가 보는 개설 과정별 과목 조회
CREATE OR REPLACE VIEW VIEW_OC_SUBJECTS
AS
SELECT C.CR_CODE AS 과정코드
     , C.CR_NAME AS 과정명
     , B.BK_NAME AS 교재명
     , OC.OC_CODE AS 개설과정코드
     , RM.RM_NAME AS 강의실명
     , S.SB_NAME AS 과목명
     , OS.OS_START_DATE "과목 시작"
     ,OS.OS_END_DATE "과목 끝"
     , FN_OS_DATE(OS.OS_CODE, OS.OS_START_DATE, OS.OS_END_DATE) AS 강의여부
FROM SUBJECTS S, OPENED_SUBJECTS OS, BOOKS B, OPENED_COURSES OC, CLASSROOMS RM, COURSES C
WHERE OS.SB_CODE = S.SB_CODE(+)
  AND OS.BK_CODE = B.BK_CODE(+)
  AND OS.OC_CODE(+) = OC.OC_CODE
  AND OC.RM_CODE = RM.RM_CODE
  AND OC.CR_CODE(+) = C.CR_CODE;

-- 과정 진행 여부 조회
CREATE OR REPLACE VIEW VIEW_CHECK_COURSES
AS
SELECT C.CR_CODE AS 과정코드
     , C.CR_NAME AS 과정명
     , OC.OC_CODE AS 개설과정코드
     , FN_OC_DATE(OC.OC_CODE, OC.OC_START_DATE, OC.OC_END_DATE) AS 과정진행여부
FROM OPENED_COURSES OC, COURSES C
WHERE OC.CR_CODE = C.CR_CODE;

-- 관리자가 보는 학생별 정보 조회
CREATE OR REPLACE VIEW VIEW_ADMIN_STUDENTS
AS
SELECT S.S_NAME "학생이름", CR.CR_NAME "과정명", SB.SB_NAME "수강과목", (ATT_SCORE + WRI_SCORE + PRC_SCORE) "총점"
FROM STUDENTS S RIGHT JOIN REGISTRATION RG
  ON S.S_CODE = RG.S_CODE
     LEFT JOIN OPENED_COURSES OC
     ON RG.OC_CODE = OC.OC_CODE
        LEFT JOIN COURSES CR
        ON OC.CR_CODE = CR.CR_CODE
            RIGHT JOIN OPENED_SUBJECTS OS
            ON OC.OC_CODE = OS.OC_CODE
                LEFT JOIN SUBJECTS SB
                ON OS.SB_CODE = SB.SB_CODE
                    LEFT JOIN SCORE SC
                    ON CONCAT(RG.RG_CODE, OS.OS_CODE) = CONCAT(SC.RG_CODE, SC.OS_CODE);

-- 중도탈락 여부 확인
CREATE OR REPLACE VIEW VIEW_DROP_LIST
AS
SELECT RG.S_CODE, CR.CR_NAME, DR.DR_REASON
FROM REGISTRATION RG RIGHT JOIN DROP_LIST DL
  ON DL.RG_CODE = RG.RG_CODE
     LEFT JOIN DROP_REASONS DR
        ON DL.DR_CODE = DR.DR_CODE
     LEFT JOIN OPENED_COURSES OC
        ON RG.OC_CODE = OC.OC_CODE
        LEFT JOIN COURSES CR
            ON OC.CR_CODE = CR.CR_CODE;

-- 등수 포함 성적 정보 조회
CREATE OR REPLACE VIEW VIEW_SCORE_RANK
AS
SELECT PR.P_CODE AS 교수코드
     , PR.P_NAME AS 교수명
     , OS.OS_CODE AS 과목코드
     , SB.SB_NAME AS 과목명
     , ST.S_CODE AS 학번
     , ST.S_NAME AS 이름
     , SC.ATT_SCORE AS 출결점수
     , SC.WRI_SCORE AS 필기점수
     , SC.PRC_SCORE AS 실기점수
     , (SC.ATT_SCORE + SC.WRI_SCORE + SC.PRC_SCORE) AS 총점
     , FN_GRADE(OS.OS_CODE, SC.ATT_SCORE, SC.WRI_SCORE, SC.PRC_SCORE) AS 등급
     , RANK() OVER(PARTITION BY OS.OS_CODE ORDER BY NVL(SC.ATT_SCORE + SC.WRI_SCORE + SC.PRC_SCORE,0) DESC) AS 등수
FROM SCORE SC LEFT JOIN REGISTRATION RG
ON SC.RG_CODE = RG.RG_CODE
    JOIN STUDENTS ST
    ON RG.S_CODE = ST.S_CODE
        JOIN OPENED_SUBJECTS OS
        ON SC.OS_CODE = OS.OS_CODE
            JOIN SUBJECTS SB
            ON OS.SB_CODE = SB.SB_CODE
                JOIN PROFESSORS PR
                ON OS.P_CODE = PR.P_CODE;
