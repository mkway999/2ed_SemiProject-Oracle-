-- 과목이 강의중인지 판별하여 출력
CREATE OR REPLACE FUNCTION FN_OS_DATE(V_OS OPENED_SUBJECTS.OS_CODE%TYPE, V_START OPENED_SUBJECTS.OS_START_DATE%TYPE, V_END OPENED_SUBJECTS.OS_END_DATE%TYPE)
RETURN VARCHAR2
IS
    V_RESULT VARCHAR2(20);
BEGIN
    CASE WHEN SYSDATE < V_START
         THEN V_RESULT := '강의 예정';
         WHEN SYSDATE BETWEEN V_START AND V_END
         THEN V_RESULT := '강의 중';
         WHEN SYSDATE > V_END
         THEN V_RESULT := '강의 종료';
    ELSE V_RESULT := '판별 불가';
    END CASE;
    RETURN V_RESULT;
END;

-- 과정이 강의중인지 판별하여 출력
CREATE OR REPLACE FUNCTION FN_OC_DATE(V_OC OPENED_COURSES.OC_CODE%TYPE, V_START OPENED_COURSES.OC_START_DATE%TYPE, V_END OPENED_COURSES.OC_END_DATE%TYPE)
RETURN VARCHAR2
IS
    V_RESULT VARCHAR2(20);
BEGIN
    CASE WHEN SYSDATE < V_START
         THEN V_RESULT := '과정 예정';
         WHEN SYSDATE BETWEEN V_START AND V_END
         THEN V_RESULT := '과정 중';
         WHEN SYSDATE > V_END
         THEN V_RESULT := '과정 종료';
    ELSE V_RESULT := '판별 불가';
    END CASE;
    RETURN V_RESULT;
END;

-- 과목별 배점을 적용하여 수강생의 성적 등급을 출력
CREATE OR REPLACE FUNCTION FN_GRADE(V_OS VARCHAR2, V_ATT NUMBER, V_WRI NUMBER, V_PRC NUMBER)
RETURN VARCHAR2
IS
    V_RESULT VARCHAR2(10);
    V_A OPENED_SUBJECTS.ATT_RATE%TYPE;
    V_W OPENED_SUBJECTS.WRI_RATE%TYPE;
    V_P OPENED_SUBJECTS.PRC_RATE%TYPE;
    V_AVG NUMBER(3);
BEGIN
    SELECT ATT_RATE, WRI_RATE, PRC_RATE INTO V_A, V_W, V_P
    FROM OPENED_SUBJECTS
    WHERE OS_CODE = V_OS;
    
    V_AVG := V_ATT*(V_A/100) + V_WRI*(V_W/100) + V_PRC*(V_P/100);
    
    IF(V_AVG >= 90)
        THEN V_RESULT := 'A';
    ELSIF(V_AVG >= 80)
        THEN V_RESULT := 'B';
    ELSIF(V_AVG >= 70)
        THEN V_RESULT := 'C';
    ELSIF(V_AVG >= 60)
        THEN V_RESULT := 'D';
    ELSIF(V_AVG<60)
        THEN V_RESULT := 'F';
    ELSE
        V_RESULT :=NULL;
    END IF;
    
    RETURN V_RESULT;
END;

-- 회원의 성별을 판별하여 출력
CREATE OR REPLACE FUNCTION FN_GENDER(V_SSN VARCHAR2)
RETURN VARCHAR2
IS
    V_RESULT VARCHAR2(10);
BEGIN
    IF(SUBSTR(V_SSN,8,1) IN ('1','3'))
        THEN V_RESULT := '남자';
    ELSIF(SUBSTR(V_SSN,8,1) IN ('2','3'))
        THEN V_RESULT := '여자';
    ELSE
        V_RESULT := '판독불가';
    END IF;
    
    RETURN V_RESULT;
END;

-- 수강신청 프로시저 관련 함수
-- ① 존재하는 학생 코드인지 판별
CREATE OR REPLACE FUNCTION FN_REGISTRAION_S_CODE
(V_S_CODE STUDENTS.S_CODE%TYPE)
RETURN NUMBER
IS
    EMP NUMBER := 0;
    
BEGIN
    
    SELECT COUNT(*) INTO  EMP       
    FROM STUDENTS
    WHERE S_CODE = V_S_CODE;
    
    RETURN EMP;                 --존재할 경우 1 반환
END;

--② 존재하는 수강 과정인지 판별
CREATE OR REPLACE FUNCTION FN_REGISTRAION_OC_CODE
(V_OC_CODE OPENED_COURSES.OC_CODE%TYPE)
RETURN NUMBER
IS
    EMP NUMBER := 0;
    
BEGIN
    
    SELECT COUNT(*) INTO  EMP       
    FROM OPENED_COURSES
    WHERE OC_CODE = V_OC_CODE;
    
    RETURN EMP;                 --존재할 경우 1 반환
END;

